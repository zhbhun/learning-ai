import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import toast from "react-hot-toast";
import { LineWave } from "react-loader-spinner";
import { api } from "~/utils/api";

const Home: NextPage = () => {
  const [input, setInput] = useState<string>("");
  const [htmlResponse, setHtmlResponse] = useState<string>(
    "<div class='h-screen w-full flex flex-col justify-center items-center'><div className='font-medium text-lg'>the dynamic interface: type anything you want in the search bar to make it real. can take up to a minute to return results.</div></div>"
  );
  const { mutateAsync, isLoading } = api.openai.chat.useMutation();

  async function chat() {
    console.log({ input });
    if (!input) {
      toast.error("Please enter a value");
      return;
    }
    const response = await mutateAsync(input);
    setHtmlResponse(response);
  }

  return (
    <>
      <Head>
        <title>Dynamic interface</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative min-h-screen">
        <div className="absolute left-1/2 top-10 -translate-x-1/2 -translate-y-1/2 transform">
          <form
            className="flex w-full items-center justify-center gap-x-2 rounded-lg border-2 border-gray-300 bg-white p-2 shadow-lg lg:w-[28rem]"
            onSubmit={(e) => {
              e.preventDefault();
              void chat();
            }}
          >
            <input
              value={input}
              onChange={(e) => setInput(e.target.value)}
              className="h-10 flex-grow rounded-lg border-2 border-gray-300 bg-white px-5 text-sm focus:outline-none"
              type="text"
              name="creation-input"
              placeholder="Create something"
            />
            <button
              className="h-10 rounded-lg border-2 border-gray-300 bg-white px-5 text-sm focus:outline-none"
              type="submit"
              disabled={isLoading}
            >
              {isLoading ? (
                <LineWave
                  height="36"
                  width="36"
                  color="#4fa94d"
                  ariaLabel="line-wave"
                  wrapperStyle={{}}
                  wrapperClass=""
                  visible={true}
                  firstLineColor=""
                  middleLineColor=""
                  lastLineColor=""
                />
              ) : (
                "Create"
              )}
            </button>
          </form>
        </div>
        <div
          className="p-8"
          dangerouslySetInnerHTML={{ __html: htmlResponse }}
        />
      </main>
    </>
  );
};

export default Home;
